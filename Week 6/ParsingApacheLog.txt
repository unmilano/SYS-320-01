#!/bin/bash

# Prompt user to enter the path of an Apache log file
read -p "Please enter the path of an Apache log file: " APACHE_LOG

# Check if the entered path points to a valid file. If not, prints an error message and exits the script.
if [[ ! -f ${APACHE_LOG} ]]; then
    echo "Please specify the path to a valid log file."
    exit 1
fi

# ses awk to extract unique IP addresses from the specified Apache log file.
# The extracted IP addresses are then processed in a loop.
# Uses grep to check if certain keywords like test/shell/echo are used, and if so, generates a command to block that corresponding IP address.
awk '{match($0, /[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+/); print substr($0, RSTART, RLENGTH)}' "${APACHE_LOG}" | sort -u | while read -r bIP; do
  # Parse through the log file
  if grep -qEi 'test|shell|echo|passwd|select|phpmyadmin|setup|admin|w00t' "${APACHE_LOG}"; then
    echo "netsh advfirewall firewall add rule add rule name=\"BLOCK IP ADDRESS - ${bIP}\" dir=in action=block remoteip=${bIP}" >> blockedips.ps1

    # Generate command to block the IP address using iptables and save it to an iptables script
    echo "iptables -A INPUT -s ${bIP} -j DROP" >> blockedips.iptables
  fi
done

# Print a finishing message.
echo "Scripts to block IP addresses have been generated and saved to blockedips.ps1 and blockedips.iptables."
